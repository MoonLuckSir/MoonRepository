<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-autowire="byName">
	
	 <!-- 定时任务的工作Bean -->  
     <bean id="quartzJob" class="com.yitong.app.action.judicial.fysfck.RequestJob" />  
       
     <!-- 定义生成工作对象的工厂，并为工厂设定目标对象targetObject属性、目标对象的工作方法targetMethod属性 -->  
     <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
          <!-- 设置定时任务执行的类  -->
         <property name="targetObject" ref="quartzJob" />  
         <!-- 设置定时任务执行的方法  -->
         <property name="targetMethod">  
             <value>getRequestByWS</value>  
         </property>  
         <!-- 设置fasle禁止任务并发进行 -->
         <property name="concurrent" value="false" />  
     </bean>  
      
     <!-- 任务调度计时器，进行定时设置。CronTriggerBean能进行非常精确的定时设置 
     <bean id="cronQuartzClock" class="org.springframework.scheduling.quartz.CronTriggerBean">  
        <property name="jobDetail" ref="jobDetail" />  -->  
         <!-- cron表达式 -->  
          <!-- <property name="cronExpression">  -->  
             <!--   0 0 */2 * * ? 每两小时、整点触发 -->  
             <!--   0 0/30 * * * ? 每30分钟  -->  
             <!--   0/5 * * * * ? 每五秒钟  -->  
            <!--   0 15 10 * * ? 每天Y分X点触发  -->  
            <!--    <value> 0 15 10 * * ? </value>  --> 
         <!-- </property>  --> 
      <!--  </bean>  --> 
       
    <!-- 调度任务触发器，启动定时任务-->  
     <!--  <bean autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  -->  
       <!--  <property name="triggers">  
            <list>  
                 <ref bean="cronQuartzClock" />  
             </list>  
         </property>  
     </bean>  -->  
 

	<!--TOMCAT-->
    <bean id="ds-ibatis" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/ERPT</value>
		</property>
	</bean>
	<bean id="ds-ods" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:comp/env/ODS</value>
		</property>
	</bean>
	
	
   
	 <!--安徽农信测试-->
<!--	<bean id="ds-ods" class="org.springframework.jndi.JndiObjectFactoryBean">-->
<!--		<property name="jndiName">-->
<!--			<value>ERPTSS</value>-->
<!--		</property>-->
<!--	</bean>-->
<!--	<bean id="ds-ibatis" class="org.springframework.jndi.JndiObjectFactoryBean">-->
<!--		<property name="jndiName">-->
<!--			<value>FinPro</value>-->
<!--		</property>-->
<!--	</bean>-->

      
   <!--江苏银行测试-->
    <!--
     <bean id="ds-ibatis" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>jdbc/FINPRO</value>
		</property>
	</bean>
	 -->
	<!--  
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">   
	    <property name="driverClassName">   
	        <value>oracle.jdbc.driver.OracleDriver</value>   
	    </property>   
	    <property name="url">              
	        <value>jdbc:oracle:thin:@odmetl:1521/odm</value>   
	     </property>   
	    <property name="username">   
	        <value>odm</value>   
	    </property>   
	    <property name="password">   
	        <value>odm</value>   
	    </property>   
	</bean>	-->	

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />		

	<bean id="sqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation">
		 
			<value>classpath:sqlmap/db2/sql-map-config.xml</value>
			
			<!-- 
			<value>classpath:sqlmap/oracle/sql-map-config.xml</value>
			--> 
			
		</property>
		<property name="dataSource" ref="ds-ibatis" />
		<property name="lobHandler" ref="lobHandler"/> 
	</bean>

	<bean id="tm-ibatis" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds-ibatis" />
	</bean>

	<!-- 配置事务特性 -->
	<tx:advice id="tx-ibatis" transaction-manager="tm-ibatis">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="page*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>

	<!-- 以AspectJ方式 定义 AOP -->
	<!-- 
		如果service没有基于接口，使用cgilib来实现AOP，定义proxy-target-class="true" 
		设置proxy-target-class="true" 其实就是强制spring使用CGLIB代理！这里我们service基于接口编程就变的毫无意义
	-->
	<aop:config proxy-target-class="true">
		<aop:advisor
			pointcut="execution(* com.yitong.app.service..*Service.*(..))"
			advice-ref="tx-ibatis" />
	</aop:config>

	<!-- Generic Dao - can be used when doing standard CRUD -->
	<bean id="ibatisDao" class="com.yitong.commons.dao.BaseDao">
		<property name="dataSource" ref="ds-ibatis" />
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>
	<bean id="ibatisOds" class="com.yitong.commons.dao.BaseDao">
		<property name="dataSource" ref="ds-ods" />
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

</beans>